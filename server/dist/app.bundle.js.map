{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.ts","webpack:///./src/modules/index.ts","webpack:///./src/modules/resolvers/user/index.ts","webpack:///./src/modules/resolvers/user/retrieve.ts","webpack:///./src/modules/schema.ts","webpack:///./src/modules/types/index.ts","webpack:///./src/modules/types/user/index.ts","webpack:///./src/modules/types/user/user.ts","webpack:///./src/server.ts","webpack:///external \"apollo-server-express\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"lodash\""],"names":["server","listen","schema","retrieve","resolver","id","name","email","teams","queries","gql","resolvers","typeDefs","User","typeDef","merge","Query","user","ApolloServer","app","express","setPort","port","set","applyMiddleware","console","log","graphqlPath","use","cors","origin","optionsSuccessStatus","get","req","res","send","status","getApp","getServer"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import server from \"./server\";\n\nserver.listen();\n\nexport default server;\n","import schema from \"./schema\";\n\nexport default schema;","import retrieve from \"./retrieve\";\n\nexport default {\n  retrieve,\n}","import { User } from \"../../../types\";\n\nconst resolver = (id: string) : User => {\n  return {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    teams: [],\n  }\n}\n\nexport default resolver;\n","import { gql } from \"apollo-server-express\";\nimport { merge } from \"lodash\";\nimport { User } from \"./types\";\n\nconst queries: any = gql`\n  type Query {\n    _empty: String\n  }\n`;\n\nconst resolvers: any = {};\n\nexport default {\n  typeDefs: [queries, User.typeDef],\n  resolvers: merge(resolvers, User.resolvers),\n};\n","import User from \"./user\";\n\nexport {\n  User,\n};\n","import User from './user';\n\nexport default User;\n","import { gql } from \"apollo-server-express\";\nimport User from '../../resolvers/user';\n\nconst typeDef = gql`\n  type User {\n    id: ID!\n    name: String!\n    email: String!\n    teams: [String]\n  }\n\n  extend type Query{\n    user(id: ID!): User\n  }\n`\n\nconst resolvers = {\n  Query: {\n    user: User.retrieve,\n  },\n};\n\nexport default {\n  typeDef,\n  resolvers,\n};\n","import express from \"express\";\nimport cors from \"cors\";\nimport { ApolloServer, gql } from \"apollo-server-express\";\n\nimport schema from \"./modules\";\n\nconst server = new ApolloServer({\n  typeDefs: schema.typeDefs,\n  resolvers: schema.resolvers,\n});\n\nconst app = express();\n\nfunction setPort(port = 4000) {\n  app.set('port', port);\n }\nserver.applyMiddleware({ app });\n\nfunction listen() {\n  app.listen({ port: 4000 }, () =>\n    console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n  );\n}\n\napp.use(cors({\n  origin: '*', // Be sure to switch to your production domain\n  optionsSuccessStatus: 200\n}));\n\napp.get('/api/status', (req, res) => {\n  res.send({ status: 'ok' });\n});\n\nexport default {\n  getApp: () => app,\n  getServer: () => server,\n  setPort,\n  listen,\n};\n","module.exports = require(\"apollo-server-express\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"lodash\");"],"sourceRoot":""}